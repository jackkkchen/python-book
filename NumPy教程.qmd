# Numpy基础知识 {.unnumbered}

## 1 NumPy简介

NumPy（Numerical Python）是一个开源的Python科学计算库，是Python中用于科学计算和数据分析的核心库之一。它包含多维数组和矩阵数据结构，提供了高性能的多维数组对象（ndarray）以及处理这些数组的各种函数，提供了高效的数组操作功能，使得处理大规模数据集变得更加高效和便捷。

### 1.1 NumPy的安装和导入

安装 NumPy ：

`conda install numpy` 或者 `pip install numpy`

导入 NumPy ：
```{python}
import numpy as np
```
使用 NumPy 缩短导入的名称np，可以提高代码的可读性

### 1.2 NumPy中的核心对象：ndarray

ndarray是NumPy中最重要的对象，它是N 维数组的简写，表示多维同类型数据的数组，可以是一维数组、二维数组或更高维度的数组。

ndarray中的元素可以是任意数据类型，包括整数、浮点数、复数等。数据类型由dtype（data type）对象来描述。

在 NumPy 中，维度称为轴。以下面这个二维数组为例，它的第一个轴的长度为2，第二个轴长度为3。

```{python}
[[2, 3, 0],
 [1, 1, 1]]
```

### 1.3 NumPy支持的数据类型

## 2 NumPy基本操作

### 2.1 创建NumPy数组

要创建 NumPy 数组，您可以使用函数`np.array()`

```{python}
import numpy as np
a = np.array([1, 2, 3])
```

#### 2.1.1 利用列表生成数组

#### 2.1.2 利用NumPy函数生成数组

### 2.2 数组的属性和常用操作

#### 2.2.1 数组的形状、维度和大小

#### 2.2.2 数组的索引和切片

#### 2.2.3 数组的数学运算和统计操作

#### 2.2.4 数组的形状操作：改变形状、展平和拼接

#### 2.2.5 数组的逻辑运算和条件操作

## 3 NumPy高级操作

### 3.1 广播操作：处理不同形状数组的运算

### 3.2 通用函数（ufunc）：对数组进行元素级操作

### 3.3 线性代数运算：矩阵乘法、逆矩阵等

### 3.4 数组的文件输入输出：读取和保存数组数据

## 4 示例和练习

---

## 安装 NumPy 

`conda install numpy` 或者`pip install numpy`

## 导入 NumPy 
```{python}
import numpy as np
```

## 数组创建
本节涵盖 `np.array()`, `np.zeros()`, `np.ones()`, `np.empty()`, `np.arange()`, `np.linspace()`,`dtype`

## 添加、删除和排序元素
本节涵盖 `np.sort()`，`np.concatenate()`

## 数组的形状和大小
本节涵盖 `ndarray.ndim()`, `ndarray.size()`,`ndarray.shape()`

## 重塑数组
本节涵盖 `arr.reshape()`

## 向数组添加新轴
本节涵盖 `np.newaxis`，`np.expand_dims`

## 索引和切片

## 从现有数据创建数组
本节涵盖 `slicing and indexing`,`np.vstack()`,`np.hstack()`,`np.hsplit()`,`.view()`,`copy()`

## 基本数组操作
本节涵盖加法、减法、乘法、除法等